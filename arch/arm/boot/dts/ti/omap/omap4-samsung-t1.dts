// SPDX-License-Identifier: GPL-2.0-only
/*
 * Copyright (c) 2023, David Wronek <davidwronek@gmail.com>
 */

/dts-v1/;
#include <dt-bindings/input/input.h>
#include "omap443x.dtsi"

#define USE_SIMPLEFB 0

/ {
	model = "Samsung Galaxy S II (GT-I9100G)";
	compatible = "samsung,t1", "ti,omap4430", "ti,omap4";

	aliases {
		display0 = &panel;
	};

	memory@80000000 {
		device_type = "memory";
		reg = <0x80000000 0x40000000>; /* 1 GB */
	};

	reserved-memory {
		#address-cells = <1>;
		#size-cells = <1>;
		ranges;

#if USE_SIMPLEFB
		framebuffer@bef00000 {
			no-map;
			reg = <0xbef00000 (480 * 800 * 4)>;
		};
#endif
	};

	chosen {
		#address-cells = <1>;
		#size-cells = <1>;
		ranges;

		bootargs = "PMOS_NOSPLASH console=tty0";

#if USE_SIMPLEFB
		panel: framebuffer@bef00000 {
			compatible = "simple-framebuffer";
			reg = <0xbef00000 (480 * 800 * 4)>;
			width = <480>;
			height = <800>;
			stride = <(480 * 4)>;
			format = "a8r8g8b8";

			vci-supply = <&vaux3>;
			vdd3-supply = <&v1v8>;

			/*
			 * That's a lot of clocks, but it's necessary due
			 * to unused clk cleanup & no panel driver yet..
			 */
			clocks = <&l3_dss_clkctrl OMAP4_DSS_CORE_CLKCTRL 0>,
				 <&l3_dss_clkctrl OMAP4_DSS_CORE_CLKCTRL 8>,
				 <&l3_dss_clkctrl OMAP4_DSS_CORE_CLKCTRL 9>,
				 <&l3_dss_clkctrl OMAP4_DSS_CORE_CLKCTRL 10>,
				 <&l3_dss_clkctrl OMAP4_DSS_CORE_CLKCTRL 11>,
				 <&l3_div_ck>;
		};
#endif
	};

	gpio-keys {
		compatible = "gpio-keys";

		power {
			label = "Power";
			linux,code = <KEY_POWER>;
			gpios = <&gpio1 3 GPIO_ACTIVE_HIGH>;
			wakeup-source;
		};

		home {
			label = "Home";
			linux,code = <KEY_HOME>;
			gpios = <&gpio1 31 GPIO_ACTIVE_LOW>;
		};


		button-volup {
			label = "Volume Up";
			linux,code = <KEY_VOLUMEUP>;
			gpios = <&gpio1 30 GPIO_ACTIVE_LOW>;
		};

		button-voldown {
			label = "Volume Down";
			linux,code = <KEY_VOLUMEDOWN>;
			gpios = <&gpio1 8 GPIO_ACTIVE_LOW>;
		};
	};

	reg_touch_en: regulator-touch-en  {
		compatible = "regulator-fixed";
		regulator-name = "touch_en";
		gpios = <&gpio2 22 GPIO_ACTIVE_HIGH>;
		regulator-always-on;
		enable-active-high;
	};

	spi-lcd {
		compatible = "spi-gpio";
		#address-cells = <1>;
		#size-cells = <0>;
		pinctrl-names = "default";
		pinctrl-0 = <&mcspi4_pins>;

		num-chipselects = <1>;
		cs-gpios = <&gpio5 26 GPIO_ACTIVE_LOW>;
		sck-gpios = <&gpio5 23 GPIO_ACTIVE_HIGH>;
		mosi-gpios = <&gpio5 24 GPIO_ACTIVE_HIGH>;

		status = "okay";

		panel: panel@0 {
			compatible = "samsung,ld9040";
			reg = <0>;

			pinctrl-names = "default";
			pinctrl-0 = <&panel_pins>;

			spi-max-frequency = <375000>;

			vdd3-supply = <&vaux3>;
			vci-supply = <&v1v8>;

			reset-gpios = <&gpio2 3 GPIO_ACTIVE_HIGH>;
			power-on-delay = <20>;
			reset-delay = <20>;

			panel-width-mm = <56>;
			panel-height-mm = <93>;

			display-timings {
				timing {
					clock-frequency = <25600000>;
					hactive = <480>;
					vactive = <800>;
					hback-porch = <16>;
					hfront-porch = <16>;
					vback-porch = <4>;
					vfront-porch = <10>;
					hsync-len = <2>;
					vsync-len = <2>;
					hsync-active = <0>;
					vsync-active = <0>;
					de-active = <0>;
					pixelclk-active = <0>;
				};
			};

			port {
				panel_in: endpoint {
					remote-endpoint = <&dpi_out>;
				};
			};
		};
	};
};

&omap4_pmx_core {
	pinctrl-names = "default";

	dss_dpi_pins: dss-dpi-pins {
		pinctrl-single,pins = <
			OMAP4_IOPAD(0x162, PIN_OUTPUT | MUX_MODE5)	/* dispc2_data23 */
			OMAP4_IOPAD(0x164, PIN_OUTPUT | MUX_MODE5) 	/* dispc2_data22 */
			OMAP4_IOPAD(0x166, PIN_OUTPUT | MUX_MODE5)	/* dispc2_data21 */
			OMAP4_IOPAD(0x168, PIN_OUTPUT | MUX_MODE5)	/* dispc2_data20 */
			OMAP4_IOPAD(0x16a, PIN_OUTPUT | MUX_MODE5)	/* dispc2_data19 */
			OMAP4_IOPAD(0x16c, PIN_OUTPUT | MUX_MODE5)	/* dispc2_data18 */
			OMAP4_IOPAD(0x16e, PIN_OUTPUT | MUX_MODE5)	/* dispc2_data15 */
			OMAP4_IOPAD(0x170, PIN_OUTPUT | MUX_MODE5)	/* dispc2_data14 */
			OMAP4_IOPAD(0x172, PIN_OUTPUT | MUX_MODE5)	/* dispc2_data13 */
			OMAP4_IOPAD(0x174, PIN_OUTPUT | MUX_MODE5)	/* dispc2_data12 */
			OMAP4_IOPAD(0x176, PIN_OUTPUT | MUX_MODE5)	/* dispc2_data11 */

			OMAP4_IOPAD(0x1b4, PIN_OUTPUT | MUX_MODE5)	/* dispc2_data10 */
			OMAP4_IOPAD(0x1b6, PIN_OUTPUT | MUX_MODE5)	/* dispc2_data9 */
			OMAP4_IOPAD(0x1b8, PIN_OUTPUT | MUX_MODE5)	/* dispc2_data16 */
			OMAP4_IOPAD(0x1ba, PIN_OUTPUT | MUX_MODE5)	/* dispc2_data17 */
			OMAP4_IOPAD(0x1bc, PIN_OUTPUT | MUX_MODE5)	/* dispc2_hsync */
			OMAP4_IOPAD(0x1be, PIN_OUTPUT | MUX_MODE5)	/* dispc2_pclk */
			OMAP4_IOPAD(0x1c0, PIN_OUTPUT | MUX_MODE5)	/* dispc2_vsync */
			OMAP4_IOPAD(0x1c2, PIN_OUTPUT | MUX_MODE5)	/* dispc2_de */
			OMAP4_IOPAD(0x1c4, PIN_OUTPUT | MUX_MODE5)	/* dispc2_data8 */
			OMAP4_IOPAD(0x1c6, PIN_OUTPUT | MUX_MODE5)	/* dispc2_data7 */
			OMAP4_IOPAD(0x1c8, PIN_OUTPUT | MUX_MODE5)	/* dispc2_data6 */
			OMAP4_IOPAD(0x1ca, PIN_OUTPUT | MUX_MODE5)	/* dispc2_data5 */
			OMAP4_IOPAD(0x1cc, PIN_OUTPUT | MUX_MODE5)	/* dispc2_data4 */
			OMAP4_IOPAD(0x1ce, PIN_OUTPUT | MUX_MODE5)	/* dispc2_data3 */

			OMAP4_IOPAD(0x1d0, PIN_OUTPUT | MUX_MODE5)	/* dispc2_data2 */
			OMAP4_IOPAD(0x1d2, PIN_OUTPUT | MUX_MODE5)	/* dispc2_data1 */
			OMAP4_IOPAD(0x1d4, PIN_OUTPUT | MUX_MODE5)	/* dispc2_data0 */
		>;
	};

	i2c1_pins: pinmux_i2c1_pins {
		pinctrl-single,pins = <
			OMAP4_IOPAD(0x122, PIN_INPUT_PULLUP | MUX_MODE0)	/* i2c1_scl */
			OMAP4_IOPAD(0x124, PIN_INPUT_PULLUP | MUX_MODE0)	/* i2c1_sda */
		>;
	};

	i2c3_pins: i2c3-pins {
		pinctrl-single,pins = <
			OMAP4_IOPAD(0x12a, PIN_INPUT_PULLUP | MUX_MODE0)	/* i2c3_scl */
			OMAP4_IOPAD(0x12c, PIN_INPUT_PULLUP | MUX_MODE0)	/* i2c3_sda */
		>;
	};

	mcspi4_pins: mcspi4-pins {
		pinctrl-single,pins = <
			OMAP4_IOPAD(0x154, PIN_OUTPUT | MUX_MODE3)	/*  mcspi4_clk.mcspi4_clk */
			OMAP4_IOPAD(0x156, PIN_OUTPUT | MUX_MODE3)	/*  mcspi4_simo.mcspi4_simo */
			OMAP4_IOPAD(0x15a, PIN_OUTPUT | MUX_MODE3)	/*  mcspi4_cs0.mcspi4_cs0 */
		>;
	};

	mmc1_pins: pinmux_mmc1_pins {
		pinctrl-single,pins = <
			OMAP4_IOPAD(0x0e2, PIN_INPUT_PULLDOWN | MUX_MODE0)	/* sdmmc1_clk */
			OMAP4_IOPAD(0x0e4, PIN_INPUT_PULLUP | MUX_MODE0)	/* sdmcc1_cmd */
			OMAP4_IOPAD(0x0e6, PIN_INPUT_PULLUP | MUX_MODE0)	/* sdmcc1_dat0 */
			OMAP4_IOPAD(0x0e8, PIN_INPUT_PULLUP | MUX_MODE0)	/* sdmmc1_dat1 */
			OMAP4_IOPAD(0x0ea, PIN_INPUT_PULLUP | MUX_MODE0)	/* sdmmc1_dat2 */
			OMAP4_IOPAD(0x0ec, PIN_INPUT_PULLUP | MUX_MODE0)	/* sdmmc1_dat3 */
		>;
	};

	mmc2_pins: pinmux_mmc2_pins {
		pinctrl-single,pins = <
			OMAP4_IOPAD(0x040, PIN_INPUT_PULLUP | MUX_MODE1)	/* sdmmc2_dat0 */
			OMAP4_IOPAD(0x042, PIN_INPUT_PULLUP | MUX_MODE1)	/* sdmmc2_dat1 */
			OMAP4_IOPAD(0x044, PIN_INPUT_PULLUP | MUX_MODE1)	/* sdmmc2_dat2 */
			OMAP4_IOPAD(0x046, PIN_INPUT_PULLUP | MUX_MODE1)	/* sdmmc2_dat3 */
			OMAP4_IOPAD(0x048, PIN_INPUT_PULLUP | MUX_MODE1)	/* sdmmc2_dat4 */
			OMAP4_IOPAD(0x04a, PIN_INPUT_PULLUP | MUX_MODE1)	/* sdmmc2_dat5 */
			OMAP4_IOPAD(0x04c, PIN_INPUT_PULLUP | MUX_MODE1)	/* sdmmc2_dat6 */
			OMAP4_IOPAD(0x04e, PIN_INPUT_PULLUP | MUX_MODE1)	/* sdmmc2_dat7 */
			OMAP4_IOPAD(0x082, PIN_INPUT_PULLUP | MUX_MODE1)	/* sdmmc2_clk */
			OMAP4_IOPAD(0x084, PIN_INPUT_PULLUP | MUX_MODE1)	/* sdmmc2_cmd */
		>;
	};

	touch_pins: pinmux_touch_pins {
		pinctrl-single,pins = <
			OMAP4_IOPAD(0x06c, PIN_INPUT | MUX_MODE3)
		>;
	};

	panel_pins: pinmux_panel_pins {
		pinctrl-single,pins = <
			OMAP4_IOPAD(0x056, PIN_OUTPUT | MUX_MODE3)
		>;
	};
};

#if USE_SIMPLEFB
&dss_core {
	status = "disabled";
};
#else
#if 0
&mcspi4 {
	pinctrl-names = "default";
	pinctrl-0 = <&mcspi4_pins>;

	status = "okay";

	panel: panel@0 {
		compatible = "samsung,ld9040";
		reg = <0>;

		pinctrl-names = "default";
		pinctrl-0 = <&panel_pins>;

		spi-max-frequency = <375000>;

		vdd3-supply = <&vaux3>;
		vci-supply = <&v1v8>;

		reset-gpios = <&gpio2 3 GPIO_ACTIVE_HIGH>;
		power-on-delay = <20>;
		reset-delay = <20>;

		panel-width-mm = <56>;
		panel-height-mm = <93>;

		display-timings {
			timing {
				clock-frequency = <25600000>;
				hactive = <480>;
				vactive = <800>;
				hback-porch = <16>;
				hfront-porch = <16>;
				vback-porch = <4>;
				vfront-porch = <10>;
				hsync-len = <2>;
				vsync-len = <2>;
				hsync-active = <0>;
				vsync-active = <0>;
				de-active = <0>;
				pixelclk-active = <0>;
			};
		};

		port {
			panel_in: endpoint {
				remote-endpoint = <&dpi_out>;
			};
		};
	};
};
#endif

&dss {
	pinctrl-names = "default";
	pinctrl-0 = <&dss_dpi_pins>;
	status = "okay";

	port {
		dpi_out: endpoint {
			remote-endpoint = <&panel_in>;
			data-lines = <24>;
		};
	};
};
#endif

&mmc1 {
	pinctrl-names = "default";
	pinctrl-0 = <&mmc1_pins>;

	/*
	 * PMIC is able to detect card, but this feature isn't available yet and
	 * the battery has to be removed anyway to insert a micro SD card.
	 */
	ti,non-removable;
	vmmc-supply = <&vmmc>;
	bus-width = <4>;
};

&mmc2 {
	pinctrl-names = "default";
	pinctrl-0 = <&mmc2_pins>;

	ti,non-removable;
	vmmc-supply = <&vaux1>;
	bus-width = <8>;
};

&mmc5 {
	status = "disabled";
};

&i2c1 {
	pinctrl-names = "default";
	pinctrl-0 = <&i2c1_pins>;

	clock-frequency = <400000>;

	twl: twl@48 {
		reg = <0x48>;
		/* IRQ# = 7 */
		interrupts = <GIC_SPI 7 IRQ_TYPE_LEVEL_HIGH>; /* IRQ_SYS_1N cascaded to gic */
	};
};

&i2c3 {
	pinctrl-names = "default";
	pinctrl-0 = <&i2c3_pins>;

	clock-frequency = <400000>;

	touchscreen@4a {
		reg = <0x4a>;
		compatible = "atmel,maxtouch";

		pinctrl-names = "default";
		pinctrl-0 = <&touch_pins>;

		vdd-supply = <&vaux2>;
		vdda-supply = <&reg_touch_en>;

		interrupt-parent = <&gpio2>;
		interrupts = <14 IRQ_TYPE_EDGE_FALLING>;
	};
};

#include "twl6030.dtsi"
#include "twl6030_omap4.dtsi"

&twl_usb_comparator {
	usb-supply = <&vusb>;
};

&usb_otg_hs {
	interface-type = <1>;
	mode = <3>;
	power = <50>;
};
